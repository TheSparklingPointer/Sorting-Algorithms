class Solution(object):
    def sortArray(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        self.quickSortHelper(nums, 0, len(nums)-1)
        return nums
        
    def quickSortHelper(self, array, start, end):
        if start<end:
            pivotIndex = self.partition(array, start, end)
            self.quickSortHelper(array, start, pivotIndex-1)
            self.quickSortHelper(array, pivotIndex+1, end)
            
    def partition(self, array, start, end):
        pivot = array[end]
        leftPointer = start
        rightPointer = end-1
        while 1:
            while leftPointer <= rightPointer and array[leftPointer] <= pivot:
                leftPointer += 1
            while leftPointer <= rightPointer and array[rightPointer] > pivot:
                rightPointer -= 1
            if leftPointer <= rightPointer:
                    array[leftPointer], array[rightPointer] = array[rightPointer],array[leftPointer]
                    leftPointer+=1
                    rightPointer-=1
            else:break
        array[leftPointer],array[end] = array[end], array[leftPointer]
        return leftPointer
        
# -------------------------------------------Test method: --------------------------------------------------------------------------------------
"""
array = [4,8,7,5,6]
sorted_array = Solution().sortArray(array)
print(sorted_array)
"""
